name: C++ Testing

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
  pull_request:

jobs:

  gtest:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        torch-version: [1.13.0]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Free up disk space
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo rm -rf /usr/share/dotnet

      - name: Install PyTorch ${{ matrix.torch-version }}+cpu
        run: |
          pip install torch==${{ matrix.torch-version }} --extra-index-url https://download.pytorch.org/whl/cpu
          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"

      - name: Configure
        run: |
          pip install ninja
          mkdir build
          cd build
          Torch_DIR=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'` cmake .. -GNinja -DBUILD_TEST=ON -DWITH_COV=ON -DCMAKE_BUILD_TYPE=DEBUG
          cd ..

      - name: Build
        run: |
          cd build
          cmake --build .
          cd ..

      - name: Run tests
        run: |
          cd build
          ctest --verbose --output-on-failure
          cd ..

      - name: Collect coverage
        run: |
          sudo apt-get install lcov
          lcov --directory . --capture --output-file .coverage.info
          lcov --remove .coverage.info '*/test/*' --output-file .coverage.info

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: .coverage.info
          fail_ci_if_error: false
