name: Minimal Installation

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
  pull_request:

jobs:

  import:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        torch-version: [1.12.0]
        cuda-version: ['cpu', 'cu113']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Free up disk space
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo rm -rf /usr/share/dotnet

      - name: Install CUDA ${{ matrix.cuda-version }}
        if: ${{ matrix.cuda-version != 'cpu' }}
        run: |
          bash ./.github/workflows/cuda/${{ runner.os }}.sh ${{ matrix.cuda-version }}

      - name: Install PyTorch ${{ matrix.torch-version }}+${{ matrix.cuda-version }}
        run: |
          pip install numpy typing-extensions dataclasses
          pip install --no-index --no-cache-dir torch==${{ matrix.torch-version}} -f https://download.pytorch.org/whl/${{ matrix.cuda-version }}/torch_stable.html
          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"

      - name: Disable CUDNN
        if: ${{ matrix.cuda-version != 'cpu' }}
        run: |
          Torch_DIR=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'`
          sed -i '95,100d' ${Torch_DIR}/Caffe2/Caffe2Config.cmake
          sed -i 's/;caffe2::cudnn-public//g' ${Torch_DIR}/Caffe2/Caffe2Targets.cmake

      - name: Install package
        run: |
          pip install ninja
          source ./.github/workflows/cuda/${{ runner.os }}-env.sh ${{ matrix.cuda-version }}
          pip install --verbose -e .[triton]

      - name: Test imports
        run: |
          python -c 'import pyg_lib;print(pyg_lib.cuda_version())'
          python -c "import pyg_lib.ops"
          python -c "import pyg_lib.sampler"
