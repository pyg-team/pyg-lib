name: Setup

inputs:
  python-version:
    required: false
    default: '3.8'
  torch-version:
    required: false
    default: '2.2.0'
  cuda-version:
    required: false
    default: cpu

runs:
  using: composite

  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Free up disk space
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo rm -rf /usr/share/dotnet
      shell: bash

    - name: Install CUDA ${{ inputs.cuda-version }}
      if: ${{ inputs.cuda-version != 'cpu' }}
      run: |
        bash ./.github/workflows/cuda/${{ runner.os }}.sh ${{ inputs.cuda-version }}
      shell: bash

    - name: Install PyTorch ${{ inputs.torch-version }}+${{ inputs.cuda-version }}
      run: |
        pip install torch==${{ inputs.torch-version }} --extra-index-url https://download.pytorch.org/whl/${{ inputs.cuda-version }}
        python -c "import torch; print('PyTorch:', torch.__version__)"
        python -c "import torch; print('CUDA:', torch.version.cuda)"
      shell: bash

    - name: Disable CUDNN
      if: ${{ inputs.cuda-version != 'cpu' }}
      run: |
        Torch_DIR=`python -c 'import torch;print(torch.utils.cmake_prefix_path)'`
        sed -i '95,100d' ${Torch_DIR}/Caffe2/Caffe2Config.cmake
        sed -i 's/;caffe2::cudnn-public//g' ${Torch_DIR}/Caffe2/Caffe2Targets.cmake
      shell: bash

    - name: Downgrade GLIBC
      if: ${{ runner.os == 'Linux' }}
      run: |
        sed -i '1s/^/#if defined(__linux__) \&\& defined(__x86_64__)\n__asm__(".symver log,log@GLIBC_2.2.5");\n#endif\n/' third_party/METIS/GKlib/gk_proto.h
        sed -i '1s/^/#if defined(__linux__) \&\& defined(__x86_64__)\n__asm__(".symver pow,pow@GLIBC_2.2.5");\n#endif\n/' third_party/METIS/libmetis/metislib.h
      shell: bash

    - name: Install additional dependencies
      run: |
        pip install setuptools ninja wheel
      shell: bash
